{"version":3,"sources":["components/Container.js","components/Row.js","components/Col.js","components/Jumbotron.js","components/Select.js","components/BarPlot.js","components/BubblePlot.js","components/GaugePlot.js","components/DemoInfo.js","components/DashboardContainer.js","App.js","index.js"],"names":["Container","props","className","fluid","children","Row","Col","size","Jumbotron","Select","console","log","sample","class","onChange","handleSelectChange","value","options","map","d","BarPlot","length","data","type","y","otu_ids","slice","id","reverse","x","sample_values","orientation","Plotly","newPlot","yaxis","title","xaxis","showlegend","BubblePlot","mode","marker","color","Math","random","text","otu_labels","layout","height","width","GaugePlot","wfreq","steps","Array","from","keys","num","range","font","gauge","axis","bar","DemoInfo","Object","entries","metadata","index","key","DashboardContainer","state","selectedSample","selectId","names","searchSamples","query","d3","then","samples","filter","parseInt","setState","catch","error","event","target","this","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a47bca4c.chunk.js","sourcesContent":["import React from 'react';\n\nfunction Container(props) {\n  return (\n    <div className={`container${props.fluid ? '-fluid' : ''}`}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Container;\n","import React from 'react';\n\nfunction Row(props) {\n  return (\n    <div className={`row${props.fluid ? '-fluid' : ''} align-middle`}>\n      {props.children}\n    </div>\n  );\n}\n\nexport default Row;\n","import React from 'react';\n\nfunction Col(props) {\n  return <div className={`col-${props.size}`}>{props.children}</div>;\n}\n\nexport default Col;\n","import React from 'react';\n\nfunction Jumbotron() {\n  return (\n    <div className=\"col-md-12 jumbotron text-center\">\n      <h1>Belly Button Biodiversity Dashboard</h1>\n      <p>Use the interactive charts below to explore the dataset</p>\n    </div>\n  );\n}\n\nexport default Jumbotron;\n","import React from 'react';\n\nfunction Select(props) {\n  console.log(props.sample);\n  return (\n    <div class=\"well\">\n      <h5>Test Subject ID No.:</h5>\n      <select onChange={props.handleSelectChange} value={props.value}>\n        {props.options.map((d) => (\n          <option>{d}</option>\n        ))}\n      </select>\n    </div>\n  );\n}\nexport default Select;\n","import React from 'react';\nimport Plotly from 'plotly.js';\n// import Plot from 'react-plotly.js';\n\nfunction BarPlot(props) {\n  // The initial value of props.sample is [] becasue the initial value of Dashboard state.selected sample is []\n  // The Dashboard state.selectedSample is updated to \"{id: \"940\", otu_ids: Array(80), otu_labels: Array(8â€¦}\" by the mothod componentDidMount after Dashboard component being rendered\n  // When the component BarPlot is first rendered, the props.sample is [], there would be an error \"otu_ids of undefined\" without \"if (props.sample.length > 0)\"\n  if (props.sample.length > 0) {\n    var data = [\n      {\n        type: 'bar',\n        y: props.sample[0].otu_ids\n          .slice(0, 10)\n          .map((id) => 'OTU ' + id)\n          .reverse(),\n        x: props.sample[0].sample_values.slice(0, 10).reverse(),\n        orientation: 'h',\n      },\n    ];\n\n    var layout = {\n      yaxis: { title: 'OTU ID' },\n      xaxis: { title: 'Sample Value' },\n      showlegend: false,\n      //   height: 500,\n      //   width: 300,\n    };\n    Plotly.newPlot('bar', data, layout);\n  }\n\n  return <div id=\"bar\"></div>;\n}\n\nexport default BarPlot;\n","import React from 'react';\nimport Plotly from 'plotly.js';\n\nfunction BubblePlot(props) {\n  if (props.sample.length > 0) {\n    var trace = {\n      type: 'bubble',\n      x: props.sample[0].otu_ids,\n      y: props.sample[0].sample_values,\n      mode: 'markers',\n      marker: {\n        size: props.sample[0].sample_values,\n        color: props.sample[0].sample_values.map(\n          (value) => `rgb(${value}, ${255 - value}, ${Math.random() * 255})`\n        ),\n      },\n      text: props.sample[0].otu_labels,\n    };\n    var data = [trace];\n\n    var layout = {\n      title: `Samples ID ${props.sample[0].id}`,\n      xaxis: { title: 'OTU ID' },\n      yaxis: { title: 'Sample Value' },\n      showlegend: false,\n      height: 600,\n      width: 1200,\n    };\n\n    Plotly.newPlot('bubble', data, layout);\n  }\n\n  return <div id=\"bubble\"></div>;\n}\n\nexport default BubblePlot;\n","import React from 'react';\nimport Plotly from 'plotly.js';\n\nfunction GaugePlot(props) {\n  if (props.wfreq !== '') {\n    var numbers = Array.from(Array(10).keys());\n    var steps = numbers.map((num) => {\n      return {\n        range: [num, num + 1],\n        color: `rgb(${Math.random() * 255},${Math.random() * 255}, ${\n          Math.random() * 255\n        } )`,\n        text: `${num}-${num + 1}`,\n      };\n    });\n    // Create a gauge chart\n    var data = [\n      {\n        type: 'indicator',\n        mode: 'gauge+number',\n        value: props.wfreq,\n        title: {\n          text: 'Belly Button Washing Frequency',\n          font: { size: 24 },\n        },\n        gauge: {\n          axis: { range: [null, 9] },\n          steps: steps,\n        },\n        bar: { color: 'darkblue' },\n      },\n    ];\n\n    Plotly.newPlot('gauge', data);\n  }\n\n  return <div id=\"gauge\"></div>;\n}\n\nexport default GaugePlot;\n","import React from 'react';\n\nfunction DemoInfo(props) {\n  return (\n    <ul className=\"list-group\">\n      {Object.entries(props.metadata).map(([key, value], index) => (\n        <li className=\"list-group-item\" key={index}>\n          {key}: {value}\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default DemoInfo;\n\n//   if (props.metadata.length > 0) {\n//     infos = Object.entries(props.metadata[0]).map(([key, value]) => {\n//       `${key}: ${value}`;\n//     });\n//   }\n","import React from 'react';\nimport Container from './Container';\nimport Row from './Row';\nimport Col from './Col';\nimport Jumbotron from './Jumbotron';\nimport Select from './Select';\nimport * as d3 from 'd3';\nimport BarPlot from './BarPlot';\nimport BubblePlot from './BubblePlot';\nimport GaugePlot from './GaugePlot';\nimport DemoInfo from './DemoInfo';\n// import Plotly from 'plotly.js';\n\nclass DashboardContainer extends React.Component {\n  state = {\n    selectedSample: [],\n    metadata: {},\n    wfreq: '',\n    selectId: '',\n    names: [],\n  };\n\n  componentDidMount() {\n    this.searchSamples('940');\n    console.log('did', this.state.metadata);\n  }\n\n  searchSamples = (query) => {\n    // Server path vs. filesystem path\n    // d3.json send a request to the path given to it.\n    // So make sure the file is served by the server, give it a server path, not a filesystem path\n    // Put the file in the public folder and use the path \"/samples.json\", instead of \"samples.json\" which is filesystem path\n    // Or put the file in public/data folder and use the path\"/data/samples.json\"\n    d3.json('https://belly-biodiversity-samples.herokuapp.com/api/samples')\n      .then((data) => {\n        let selectedSample = data.samples.filter((d) => d.id === query);\n        let metadata = data.metadata.filter((d) => d.id === parseInt(query));\n        let wfreq = metadata[0].wfreq;\n        let names = data.names;\n        this.setState({\n          selectedSample: selectedSample,\n          metadata: metadata[0],\n          wfreq: wfreq,\n          names: names,\n        });\n      })\n      .catch((error) => console.log(error));\n  };\n\n  handleSelectChange = (event) => {\n    this.setState({\n      selectId: event.target.value,\n    });\n    this.searchSamples(event.target.value);\n  };\n\n  render() {\n    return (\n      <Container>\n        <Row>\n          <Jumbotron />\n        </Row>\n        <Row>\n          <Col size=\"md-3\">\n            <Select\n              value={this.state.selectId}\n              handleSelectChange={this.handleSelectChange}\n              options={this.state.names}\n              sample={this.state.selectedSample}\n            />\n            <DemoInfo metadata={this.state.metadata} />\n          </Col>\n\n          <Col size=\"md-4\">\n            <BarPlot sample={this.state.selectedSample} />\n          </Col>\n          <Col size=\"md-5\">\n            <GaugePlot wfreq={this.state.wfreq} />\n          </Col>\n        </Row>\n        <Row>\n          <Col size=\"md-12\">\n            <BubblePlot sample={this.state.selectedSample} />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default DashboardContainer;\n","import React from 'react';\nimport DashboardContainer from './components/DashboardContainer';\n\nfunction App() {\n  return <DashboardContainer />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}